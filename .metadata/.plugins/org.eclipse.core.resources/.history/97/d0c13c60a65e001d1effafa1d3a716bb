package br.com.fiap.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import br.com.fiap.factory.ConnectionFactory;
import br.com.fiap.to.TelefoneTO;
import br.com.fiap.to.UsuarioTO;

public class TelefoneDAO implements IDAO {
	
	private Connection con = null;
	
	public TelefoneDAO() {
		this.con = new ConnectionFactory().getConnection();
	}
	
	
	public String insert(Object obj) {
		TelefoneTO telefone = (TelefoneTO) obj;
		
		String sql = "INSERT INTO T_SQ_TELEFONE (ID_TELEFONE, NR_DDD, NR_DDI, NR_TELEFONE, ST_TELEFONE) "
				+ "VALUES (SQ_GS_TELEFONE.NEXTVAL, ?, ?, ?, ?)";

		PreparedStatement ps = null;

		try {
			ps = con.prepareStatement(sql);

			ps.setInt(1, telefone.getNrDdd());
			ps.setInt(2, telefone.getNrDdi());
			ps.setInt(3, telefone.getNrTelefone());
			ps.setString(4, telefone.getStTelefone());
			if (ps.executeUpdate() > 0) {
				return "Inserido com sucesso.";
			} else {
				return "Erro ao inserir.";
			}

		} catch (SQLException e) {
			return e.getMessage();
		}
	}
	
	
	public String update(Object obj) {
		TelefoneTO telefone = (TelefoneTO) obj;
		
		String sql = "UPDATE T_GS_TELEFONE SET NR_DDD = ?, NR_DDI = ?, NR_TELEFONE = ?, ST_TELEFONE = ? WHERE ID_TELEFONE = ?";
		
		PreparedStatement ps = null;
		
		try {
			ps = con.prepareStatement(sql);
			
			ps.setString(1, telefone.getNmCompleto());
			ps.setString(2, telefone.getDsEmail());
			ps.setString(3, telefone.getDsSenha());
			ps.setString(4, telefone.getNrCpf());
			ps.setInt(5, telefone.getIdTelefone());
			
			if (ps.executeUpdate() > 0) {
				ps.close();
				con.close();
				return "Atualizado com sucesso.\n" + "Conexão Fechada!";
			} else {
				ps.close();
				con.close();
				return "Error ao alterar.\n" + "Conexão Fechada!";
			}
		} catch (Exception e) {
			return e.getMessage();
		}
	}
}
