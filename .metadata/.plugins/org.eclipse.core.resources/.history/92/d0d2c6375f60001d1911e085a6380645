package br.com.fiap.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;

import br.com.fiap.factory.ConnectionFactory;
import br.com.fiap.to.AdminTO;


public class AdminDAO implements IDAO {

	private Connection con = null;
	
	public AdminDAO() {
		this.con = new ConnectionFactory().getConnection();
	}

	
	
	/**
	 * Validação de administrador a partir dos atributos DS_EMAIL e DS_SENHA
	 * no Banco de Dados
	 */
	public AdminTO loginDAO(AdminTO admin) {

		String sql = "SELECT * FROM T_GS_ADMIN WHERE DS_EMAIL = ? AND DS_SENHA = ?";
		
		List<AdminTO> resul = new ArrayList<AdminTO>();
		
		PreparedStatement ps = null;

		try {
			ps = con.prepareStatement(sql);

			ps.setString(1, admin.getDsEmail());
			ps.setString(2, admin.getDsSenha());

			ResultSet rs = ps.executeQuery();
			
			while (rs.next()) {
				admin.setDsEmail(rs.getString(3));
				admin.setDsSenha(rs.getString(4));
				resul.add(admin);
			}
			
			for (int i = 0; i < resul.size(); i++) {
				if (resul.get(i).getDsEmail().equals(admin.getDsEmail()) 
				    && 
				    resul.get(i).getDsSenha().equals(admin.getDsSenha())
				 ) {
					return resul.get(i);
				}
			}
			
			rs.close();
			ps.close();
			con.close();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return null;
	}
	
	
	/**
	 * Cadastro de informações do administrador.
	 */
	public String insert(Object obj) {
		AdminTO admin = (AdminTO) obj;
		
		String sql = "INSERT INTO T_GS_ADMIN (ID_ADIMIN, NM_ADIMIN, DS_EMAIL, DS_SENHA) "
				+ "VALUES (SQ_GS_ADMIN.NEXTVAL, ?, ?, ?)";
		
		PreparedStatement ps = null;
		
		try {
			ps = con.prepareStatement(sql);
			
			ps.setString(1, admin.getNmAdmin());
			ps.setString(2, admin.getDsEmail());
			ps.setString(3, admin.getDsSenha());
			
			if (ps.executeUpdate() > 0) {
				ps.close();
				con.close();
				return "Inserido com sucesso.\n" + "Conexão Fechada!";
			} else {
				ps.close();
				con.close();
				return "Error ao inserir.\n" + "Conexão Fechada!";
			}
		} catch (Exception e) {
			return e.getMessage();
		}
	}
	
	
	/**
	 * Atualização de informações do administrador.
	 */
	public String update(Object obj) {
		AdminTO admin = (AdminTO) obj;
		
		String sql = "UPDATE T_GS_ADMIN SET NM_ADIMIN = ?, DS_EMAIL = ?, DS_SENHA = ? WHERE ID_ADIMIN = ?";
		
		PreparedStatement ps = null;
		
		try {
			ps = con.prepareStatement(sql);
			
			ps.setString(1, admin.getNmAdmin());
			ps.setString(2, admin.getDsEmail());
			ps.setString(3, admin.getDsSenha());
			ps.setInt(4, admin.getIdAdmin());
			
			if (ps.executeUpdate() > 0) {
				ps.close();
				con.close();
				return "Atualizado com sucesso.\n" + "Conexão Fechada!";
			} else {
				ps.close();
				con.close();
				return "Error ao alterar.\n" + "Conexão Fechada!";
			}
		} catch (Exception e) {
			return e.getMessage();
		} 
	}
	
	
	/**
	 * Método para deletar informações do administrador a partir da chave primária
	 * da tabela do banco de dados (T_GS_ADMIN).
	 */
	public String delete(Integer id) {
		String sql = "DELETE FROM T_GS_ADMIN WHERE ID_ADIMIN = ? ";

		PreparedStatement ps = null;

		try {
			ps = con.prepareStatement(sql);
			
			ps.setInt(1, id);

			if (ps.executeUpdate() > 0) {
				ps.close();
				con.close();
				return "Excluido com sucesso!\n" + "Conexão Fechada!";
			} else {
				ps.close();
				con.close();
				return "Erro ao excluir!\n" + "Conexão Fechada!";
			}
		} catch (SQLException e) {
			return e.getMessage();
		}
	}
	
	
	public List<AdminTO> select(Integer id) {
		String sql = "SELECT * FROM T_GS_ADMIN";
		sql += " WHERE ID_ADIMIN = ?";
		List<AdminTO> resul = new ArrayList<AdminTO>();
		
		PreparedStatement ps = null;

		try {
			ps = con.prepareStatement(sql);
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();

			if (rs.next()) {
				AdminTO admin = new AdminTO();
				admin.setIdAdmin(rs.getInt(1));
				admin.setNmAdmin(rs.getString(2));
				admin.setDsEmail(rs.getString(3));
				admin.setDsSenha(rs.getString(4));
				resul.add(admin);

				rs.close();
				ps.close();
				con.close();
				return resul;
			} 
			else {
				rs.close();
				ps.close();
				con.close();
				return null;
			}
		} catch (SQLException e) {
			return null;
		}
	}
	
	
	public List<AdminTO> selectAll() {

		String sql = "SELECT * FROM T_GS_ADMIN";
		List<AdminTO> resul = new ArrayList<AdminTO>();

		PreparedStatement ps = null;

		try {
			ps = con.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();

			if (rs != null) {
				while (rs.next()) {
					AdminTO admin = new AdminTO();

					admin.setIdAdmin(rs.getInt(1));
					admin.setNmAdmin(rs.getString(2));
					admin.setDsEmail(rs.getString(3));
					admin.setDsSenha(rs.getString(4));
					resul.add(admin);
				}

				rs.close();
				ps.close();
				con.close();
				return resul;
			} else {
				ps.close();
				con.close();
				return null;
			}
		} catch (SQLException e) {
			return null;
		}
	}

}