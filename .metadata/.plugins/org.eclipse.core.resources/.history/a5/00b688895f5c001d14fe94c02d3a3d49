package br.com.fiap.resource;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;

import br.com.fiap.bo.UsuarioBO;
import br.com.fiap.to.UsuarioTO;

@Path("/usuario")
public class UsuarioResource {
	
	private UsuarioBO ub = new UsuarioBO();
	
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public Response loginUsuario(UsuarioTO ut) {
		
		return Response
		.status(200)
		.entity(ub.validacao(ut))
		.build();
	}
	
	
	// Cadastrar / Insert / Post (Postman)
		@POST
		@Consumes(MediaType.APPLICATION_JSON)
		public Response cadastrar(UsuarioTO ut, @Context UriInfo uriInfo) {
			// Cadastrando um novo recrutador
			ub.cadastrar(ut);

			// Construindo o PATH
			UriBuilder builder = uriInfo.getAbsolutePathBuilder();

			// Parseando o código e concatenando com o PATH
			builder.path(Integer.toString(ut.getIdUsuario()));

			// Retornando o Status Code do HTTP através do Builder
			return Response.created(builder.build()).build();
		}
		
		
		

}
