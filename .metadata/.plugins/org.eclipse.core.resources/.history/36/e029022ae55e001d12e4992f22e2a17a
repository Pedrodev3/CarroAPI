package br.com.fiap.resource;

import java.util.ArrayList;

import javax.websocket.server.PathParam;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriBuilder;
import javax.ws.rs.core.UriInfo;

import br.com.fiap.bo.TelefoneBO;
import br.com.fiap.to.TelefoneTO;
import br.com.fiap.to.UsuarioTO;

@Path("/telefone")
public class TelefoneResource {

	private TelefoneBO tb = new TelefoneBO();
	
	
	// Cadastrar / Insert / Post (Postman)
		@POST
		@Consumes(MediaType.APPLICATION_JSON)
		public Response cadastrar(TelefoneTO tt, @Context UriInfo uriInfo) {
			// Cadastrando um novo recrutador
			tb.cadastrar(tt);

			// Construindo o PATH
			UriBuilder builder = uriInfo.getAbsolutePathBuilder();

			// Parseando o código e concatenando com o PATH
			builder.path(Integer.toString(ut.getIdUsuario()));

			// Retornando o Status Code do HTTP através do Builder
			return Response.created(builder.build()).build();
		}
	
}
